var Grid=function(e,r){this.scores=scores,this.noGrids=e,this.cellArray=[]};Grid.prototype.init=function(){var e=this,r;this.render(),setTimeout(function(){e.randomValue(),e.randomValue()},0)},Grid.prototype.render=function(){for(var e=this,r=document.getElementById("grids"),o=0;o<e.noGrids;o++){var t=document.createElement("div");t.className="grid-row",r.appendChild(t);for(var s=0;s<e.noGrids;s++){var l=document.createElement("div");l.className="grid-cell",t.appendChild(l),e.cellArray.push(new Cells(o,e.noGrids,l))}}},Grid.prototype.randomValue=function(){var e=this,r=Math.random()<.5?2:4,o=Math.floor(Math.random()*this.noGrids*this.noGrids);0===e.cellArray[o].value?(console.log("passed: "+o),e.cellArray[o].setCellValue(r)):(console.log("recursion"),e.randomValue())},Grid.prototype.closeGapCells=function(e){for(var r=0;r<e.length;r++){var o=r+1;if(0===e[r]){for(;0===e[o]&&o<e.length;)o++;if(o===e.length)break;e[r]=e[o],e[o]=0}}},Grid.prototype.mergeCells=function(e){for(var r=this,o=0;o<e.length-1;o++){var t=o+1;e[o]===e[o+1]&&(e[o]*=2,e[t]=0,r.scores.addScore(e[o]))}},Grid.prototype.moveCells=function(e){var r=this;this.closeGapCells(e),this.mergeCells(e),this.closeGapCells(e)},Grid.prototype.cellHasMoved=function(){for(var e=this,r=[],o=0;16>o;o++){var t=this.cellArray[o].setHasMoved();r.push(t)}return r.indexOf(!0)>-1?!0:!1},Grid.prototype.resetGame=function(){this.scores.reset()},Grid.prototype.console=function(){console.log("hello")};